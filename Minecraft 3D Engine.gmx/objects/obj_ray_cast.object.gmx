<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_raycast</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z_offset = 0;
z = 32;
move_snap(32,32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Choose block to create TODO: allow selection of blocks


if (mouse_check_button_released(mb_right))
{
    var block = instance_create(x, y, obj_grass_block);
    block.z = z + z_offset;
}

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var closest_block = noone;
var closest_dist = 999999;

// Check tall grass blocks
with (obj_tinted_cross)
{
    var dist3d = point_distance_3d(other.x, other.y, other.z + other.z_offset, x, y, z);
    if (dist3d &lt; closest_dist)
    {
        closest_dist = dist3d;
        closest_block = id;
    }
}

// Check grass blocks
with (obj_grass_block)
{
    var dist3d = point_distance_3d(other.x, other.y, other.z + other.z_offset, x, y, z);
    if (dist3d &lt; closest_dist)
    {
        closest_dist = dist3d;
        closest_block = id;
    }
}

// Check sand blocks
with (obj_sand_block)
{
    var dist3d = point_distance_3d(other.x, other.y, other.z + other.z_offset, x, y, z);
    if (dist3d &lt; closest_dist)
    {
        closest_dist = dist3d;
        closest_block = id;
    }
}

// Check snow blocks
with (obj_snow_block)
{
    var dist3d = point_distance_3d(other.x, other.y, other.z + other.z_offset, x, y, z);
    if (dist3d &lt; closest_dist)
    {
        closest_dist = dist3d;
        closest_block = id;
    }
}

// If found, destroy the block
if (closest_block != noone)
{
    with (closest_block)
    {
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tex = sprite_get_texture(spr_raycast, 0);

d3d_set_lighting(1);
d3d_set_culling(0);
d3d_set_hidden(0);
texture_set_interpolation(0);
draw_set_alpha(1.0);

// Use z + z_offset
d3d_draw_block(x, y, z + z_offset, x + 32, y + 32, z + z_offset + 32, tex, 1, 1);
//show_debug_message("x: " + string(x) + ", y: " + string(y) + ", z: " + string(z + z_offset));

draw_set_alpha(1.0);
texture_set_interpolation(1);
d3d_set_culling(1);
d3d_set_hidden(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

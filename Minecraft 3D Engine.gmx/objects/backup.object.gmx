<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This depends on what is your surface size
W = room_width
H = room_height
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for pixels!
///////////////////////////////////////////////////////////////////////
var buff = buffer_getpixel_begin(application_surface);//create/update buffer with surface
repeat(1)
{
 var c = buffer_getpixel(buff,mouse_x,mouse_y,W,H);//get pixel RGB from mouse coordinates
 var r = buffer_getpixel_r(buff,mouse_x,mouse_y,W,H);//get red value
 var g = buffer_getpixel_g(buff,mouse_x,mouse_y,W,H);//get green value
 var b = buffer_getpixel_b(buff,mouse_x,mouse_y,W,H);//get blue value
}

buffer_delete(buff);//remove memory
///////////////////////////////////////////////////////////////////////
///draw_rectangle_colour(0,0,120,70,c_white,c_white,c_white,c_white,0)

draw_text_color(400,0,"C: "+string(c),c_ltgray,c_ltgray,c_ltgray,c_ltgray,1)
draw_text_color(400,12,"R: "+string(r),c_red,c_red,c_red,c_red,1)
draw_text_color(400,24,"G: "+string(g),c_green,c_green,c_green,c_green,1)
draw_text_color(400,36,"B: "+string(b),c_blue,c_blue,c_blue,c_blue,1)
draw_text_color(400,48,"FPS: "+string(fps_real),c_dkgray,c_dkgray,c_dkgray,c_dkgray,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

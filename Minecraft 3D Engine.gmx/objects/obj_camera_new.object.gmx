<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mask16</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Camera Create Event
z = 80;  // Initial vertical position or height of the camera/player
facingDir = 0;
// Use built-in direction variable instead of 'dir'
direction = 0;  // Facing angle (0-360 degrees)
zdir = 0;       // Vertical look angle
speed = 0;
friction = 0.1;
lookx = 0;
looky = 0;
lookz = 0;
player_height = 80;
playerAcceleration = 0.50;
jump = false;
jumpHeightModifier = 0;

z_scroll_offset = 0;
raycastDelay = 0;

directionText = "";

// Set mouse center for input tracking
wd = window_get_width() / 2;
hd = window_get_height() / 2;
window_mouse_set(wd, hd);

// 3D initialization as before
d3d_start();
d3d_set_lighting(false);
d3d_set_culling(true);
d3d_set_shading(true);
d3d_set_fog(true, c_skyfog, global.fog_near, global.fog_far);
d3d_light_define_direction(1, 0.5, 0.25, -1, c_gray);
d3d_light_enable(1, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Camera Step Event

// Get mouse movement relative to center
var xdif = window_mouse_get_x() - wd;
var ydif = window_mouse_get_y() - hd;
window_mouse_set(wd, hd);

// Update facing direction using mouse movement
facingDir = (facingDir - xdif / 4) mod 360;
zdir = clamp(zdir - ydif / 4, -85, 85);

// --- Smooth WASD movement using custom facingDir ---

var move_x = 0;
var move_y = 0;

if (keyboard_check(ord("W"))) {
    move_x += lengthdir_x(1, facingDir);
    move_y += lengthdir_y(1, facingDir);
}
if (keyboard_check(ord("S"))) {
    move_x += lengthdir_x(-1, facingDir);
    move_y += lengthdir_y(-1, facingDir);
}
if (keyboard_check(ord("A"))) {
    move_x += lengthdir_x(1, (facingDir + 90) mod 360);
    move_y += lengthdir_y(1, (facingDir + 90) mod 360);
}
if (keyboard_check(ord("D"))) {
    move_x += lengthdir_x(-1, (facingDir + 90) mod 360);
    move_y += lengthdir_y(-1, (facingDir + 90) mod 360);
}

if (move_x != 0 || move_y != 0) {
    var move_len = point_distance(0, 0, move_x, move_y);
    move_x /= move_len;
    move_y /= move_len;
    
    // Use vspeed/hspeed instead of speed/direction
    hspeed += move_x * playerAcceleration;
    vspeed += move_y * playerAcceleration;
}

// Very small motion_add to keep facing direction updated
motion_add(facingDir, 0.00000000001);


// Clamp final speed 
var final_speed = point_distance(0, 0, hspeed, vspeed);
if (final_speed &gt; 1.5) {
    var angle = point_direction(0, 0, hspeed, vspeed);
    hspeed = lengthdir_x(1.5, angle);
    vspeed = lengthdir_y(1.5, angle);
}

// Camera look vectors
lookz = lengthdir_y(1, -zdir);
lookx = lengthdir_x(1 - abs(lookz), facingDir);
looky = lengthdir_y(1 - abs(lookz), facingDir);

// Jump logic
if keyboard_check_pressed(vk_space) &amp;&amp; !jump {
    jump = true;
    jumpHeightModifier += 5.0;
}

if (jump) {
    z += jumpHeightModifier;
    jumpHeightModifier -= 0.5;

    if (z &lt;= player_height) {
        z = player_height;
        jumpHeightModifier = 0;
        jump = false;
    }
}

// Scroll mouse wheel to change Z height
if (mouse_wheel_up()) z_scroll_offset += 32;
if (mouse_wheel_down()) z_scroll_offset -= 32;

// Raycast and collision 
scr_Raycast();
scr_CollisionHandler();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change render distance
if keyboard_check_released(vk_numpad4)
{
    global.fog_far -= 256; 
    global.renderDistance -= 256; 
    global.zFar -= 256;
}

if keyboard_check_released(vk_numpad6)
{
    global.fog_far += 256; 
    global.renderDistance += 256; 
    global.zFar += 256;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw the camera view
d3d_set_projection_ext(x,y,z,x+lookx,y+looky,z+lookz,0,0,1,80,16/9,.1,global.zFar);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
